<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Daily Circuit Enablement Report - Discount Tire</title>
    <link href="{{ url_for('static', filename='favicon.ico') }}" rel="icon">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f5f5f5;
            color: #333;
            margin: 20px;
        }
        
        .header-container {
            background-color: #2c3e50;
            color: white;
            padding: 15px;
            border-radius: 5px 5px 0 0;
            margin-bottom: 0;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            position: relative;
        }
        
        .header-container h1 {
            margin: 0;
            font-size: 24px;
            display: inline-block;
        }
        
        .last-updated {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 14px;
            color: #ecf0f1;
            font-weight: 400;
        }
        
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 0 0 5px 5px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.2);
        }
        
        .nav-buttons {
            margin-bottom: 20px;
        }
        
        .nav-buttons button {
            background: #3498db;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            margin-right: 8px;
            font-size: 14px;
            cursor: pointer;
        }
        
        .nav-buttons button:hover {
            background: #2980b9;
        }
        
        /* Controls Section */
        .controls-section {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 25px;
        }
        
        .controls-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            align-items: end;
        }
        
        .control-group label {
            display: block;
            font-weight: 600;
            color: #495057;
            margin-bottom: 5px;
        }
        
        .control-group input, .control-group select {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            font-size: 14px;
        }
        
        .btn-primary {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
        }
        
        .btn-primary:hover {
            background: #0056b3;
        }
        
        /* Summary Cards */
        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .summary-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            border-left: 4px solid #007bff;
        }
        
        .summary-card.total { border-left-color: #28a745; }
        .summary-card.average { border-left-color: #ffc107; }
        .summary-card.max { border-left-color: #dc3545; }
        .summary-card.days { border-left-color: #6c757d; }
        
        .card-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 8px;
        }
        
        .card-label {
            font-size: 0.9rem;
            color: #6c757d;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .card-detail {
            font-size: 0.8rem;
            color: #868e96;
            margin-top: 5px;
        }
        
        /* Charts Section */
        .charts-section {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 25px;
            margin-bottom: 30px;
        }
        
        .chart-container {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .chart-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .chart-wrapper {
            position: relative;
            height: 300px;
        }
        
        /* Trend Section */
        .trend-section {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 25px;
        }
        
        .trend-controls {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
            justify-content: center;
        }
        
        .trend-btn {
            background: #e9ecef;
            color: #495057;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
        }
        
        .trend-btn.active {
            background: #007bff;
            color: white;
        }
        
        /* Loading and Error States */
        .loading {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }
        
        .error {
            background: #f8d7da;
            color: #721c24;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
            border: 1px solid #f5c6cb;
        }
        
        .no-data {
            text-align: center;
            color: #6c757d;
            padding: 40px;
            font-style: italic;
        }
        
        /* Export Section */
        .export-section {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .export-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            margin: 0 5px;
        }
        
        .export-btn:hover {
            background: #1e7e34;
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .charts-section {
                grid-template-columns: 1fr;
            }
            
            .controls-grid {
                grid-template-columns: 1fr;
            }
            
            .summary-cards {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <div class="header-container">
        <h1>Daily Circuit Enablement Report</h1>
        <div class="last-updated" id="lastUpdated">Loading...</div>
    </div>

    <div class="container">
        <!-- Navigation Buttons -->
        <div class="nav-buttons">
            <button onclick="window.location.href='/dsrcircuits'">üè† Home</button>
            <button onclick="window.location.href='/dsrdashboard'">üìä Status Dashboard</button>
            <button onclick="window.location.href='/dsrhistorical'">üìà Historical Data</button>
            <button onclick="window.open('/inventory-summary', '_blank')">üì¶ Inventory Summary</button>
        </div>

        <!-- Controls Section -->
        <div class="controls-section">
            <h3 style="margin-bottom: 15px; color: #495057;">Report Parameters</h3>
            <div class="controls-grid">
                <div class="control-group">
                    <label for="reportType">Report Type</label>
                    <select id="reportType">
                        <option value="days">Last N Days</option>
                        <option value="range">Date Range</option>
                    </select>
                </div>
                <div class="control-group" id="daysGroup">
                    <label for="daysInput">Number of Days</label>
                    <input type="number" id="daysInput" value="30" min="7" max="365">
                </div>
                <div class="control-group" id="startDateGroup" style="display: none;">
                    <label for="startDate">Start Date</label>
                    <input type="date" id="startDate">
                </div>
                <div class="control-group" id="endDateGroup" style="display: none;">
                    <label for="endDate">End Date</label>
                    <input type="date" id="endDate">
                </div>
                <div class="control-group">
                    <button class="btn-primary" onclick="generateReport()">Generate Report</button>
                </div>
            </div>
        </div>

        <!-- Summary Cards -->
        <div class="summary-cards" id="summaryCards">
            <div class="summary-card total">
                <div class="card-number" id="totalEnabled">-</div>
                <div class="card-label">Total Enabled</div>
                <div class="card-detail" id="totalPeriod">-</div>
            </div>
            <div class="summary-card average">
                <div class="card-number" id="avgPerDay">-</div>
                <div class="card-label">Average Per Day</div>
                <div class="card-detail">Daily Average</div>
            </div>
            <div class="summary-card max">
                <div class="card-number" id="maxDay">-</div>
                <div class="card-label">Best Day</div>
                <div class="card-detail" id="maxDayDate">-</div>
            </div>
            <div class="summary-card days">
                <div class="card-number" id="daysAnalyzed">-</div>
                <div class="card-label">Days Analyzed</div>
                <div class="card-detail">Data Points</div>
            </div>
        </div>

        <!-- Charts Section -->
        <div class="charts-section">
            <div class="chart-container">
                <div class="chart-title">Daily Circuit Enablements</div>
                <div class="chart-wrapper">
                    <canvas id="dailyChart"></canvas>
                </div>
            </div>
            <div class="chart-container">
                <div class="chart-title">Enablement Distribution</div>
                <div class="chart-wrapper">
                    <canvas id="distributionChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Trend Analysis Section -->
        <div class="trend-section">
            <div class="chart-title">Enablement Trends</div>
            <div class="trend-controls">
                <button class="trend-btn active" onclick="loadTrend('weekly')">Weekly Trend</button>
                <button class="trend-btn" onclick="loadTrend('monthly')">Monthly Trend</button>
            </div>
            <div class="chart-wrapper">
                <canvas id="trendChart"></canvas>
            </div>
        </div>

        <!-- Export Section -->
        <div class="export-section">
            <h3 style="margin-bottom: 15px; color: #495057;">Export Report</h3>
            <button class="export-btn" onclick="exportToExcel()">üìä Export to Excel</button>
            <button class="export-btn" onclick="exportToPDF()">üìÑ Export to PDF</button>
            <button class="export-btn" onclick="printReport()">üñ®Ô∏è Print Report</button>
        </div>

        <!-- Loading/Error States -->
        <div id="loading" class="loading" style="display: none;">
            <p>Generating enablement report...</p>
        </div>
        <div id="error" class="error" style="display: none;"></div>
    </div>

    <script>
        let dailyChart = null;
        let distributionChart = null;
        let trendChart = null;
        let currentData = null;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Set default dates
            const today = new Date();
            const thirtyDaysAgo = new Date(today.getTime() - (30 * 24 * 60 * 60 * 1000));
            
            document.getElementById('endDate').value = today.toISOString().split('T')[0];
            document.getElementById('startDate').value = thirtyDaysAgo.toISOString().split('T')[0];
            
            // Set up event listeners
            document.getElementById('reportType').addEventListener('change', toggleDateInputs);
            
            // Generate initial report
            generateReport();
        });

        function toggleDateInputs() {
            const reportType = document.getElementById('reportType').value;
            const daysGroup = document.getElementById('daysGroup');
            const startDateGroup = document.getElementById('startDateGroup');
            const endDateGroup = document.getElementById('endDateGroup');

            if (reportType === 'days') {
                daysGroup.style.display = 'block';
                startDateGroup.style.display = 'none';
                endDateGroup.style.display = 'none';
            } else {
                daysGroup.style.display = 'none';
                startDateGroup.style.display = 'block';
                endDateGroup.style.display = 'block';
            }
        }

        async function generateReport() {
            const loading = document.getElementById('loading');
            const error = document.getElementById('error');
            
            loading.style.display = 'block';
            error.style.display = 'none';

            try {
                const reportType = document.getElementById('reportType').value;
                let url = '/api/daily-enablement-data';
                
                if (reportType === 'days') {
                    const days = document.getElementById('daysInput').value;
                    url += `?days=${days}`;
                } else {
                    const startDate = document.getElementById('startDate').value;
                    const endDate = document.getElementById('endDate').value;
                    url += `?start_date=${startDate}&end_date=${endDate}`;
                }

                const response = await fetch(url);
                const data = await response.json();

                if (!response.ok) {
                    throw new Error(data.error || 'Failed to load data');
                }

                currentData = data;
                updateSummaryCards(data.summary);
                createDailyChart(data.daily_data);
                createDistributionChart(data.daily_data);
                
                // Load initial trend
                loadTrend('weekly');
                
                document.getElementById('lastUpdated').textContent = 
                    `Report generated: ${new Date().toLocaleString()}`;

            } catch (err) {
                console.error('Error generating report:', err);
                error.textContent = 'Error generating report: ' + err.message;
                error.style.display = 'block';
            } finally {
                loading.style.display = 'none';
            }
        }

        function updateSummaryCards(summary) {
            document.getElementById('totalEnabled').textContent = summary.total_enabled;
            document.getElementById('avgPerDay').textContent = summary.avg_per_day;
            document.getElementById('maxDay').textContent = summary.max_day ? summary.max_day.count : '0';
            document.getElementById('daysAnalyzed').textContent = summary.days_analyzed;
            
            document.getElementById('totalPeriod').textContent = 
                `${summary.period_start} to ${summary.period_end}`;
            document.getElementById('maxDayDate').textContent = 
                summary.max_day ? summary.max_day.date : '-';
        }

        function createDailyChart(data) {
            const ctx = document.getElementById('dailyChart').getContext('2d');
            
            if (dailyChart) {
                dailyChart.destroy();
            }

            dailyChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.map(d => d.formatted_date),
                    datasets: [{
                        label: 'Circuits Enabled',
                        data: data.map(d => d.count),
                        borderColor: '#007bff',
                        backgroundColor: 'rgba(0, 123, 255, 0.1)',
                        borderWidth: 2,
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        function createDistributionChart(data) {
            const ctx = document.getElementById('distributionChart').getContext('2d');
            
            if (distributionChart) {
                distributionChart.destroy();
            }

            // Create histogram bins
            const counts = data.map(d => d.count);
            const maxCount = Math.max(...counts);
            const bins = [];
            
            for (let i = 0; i <= maxCount; i++) {
                bins.push(counts.filter(c => c === i).length);
            }

            distributionChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: bins.map((_, i) => i),
                    datasets: [{
                        label: 'Days',
                        data: bins,
                        backgroundColor: '#28a745',
                        borderColor: '#1e7e34',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Circuits Enabled Per Day'
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Number of Days'
                            },
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        async function loadTrend(period) {
            try {
                // Update button states
                document.querySelectorAll('.trend-btn').forEach(btn => {
                    btn.classList.remove('active');
                });
                event.target.classList.add('active');

                const response = await fetch(`/api/enablement-trend?period=${period}`);
                const data = await response.json();

                if (!response.ok) {
                    throw new Error(data.error || 'Failed to load trend data');
                }

                createTrendChart(data.trend_data, period);

            } catch (err) {
                console.error('Error loading trend:', err);
            }
        }

        function createTrendChart(data, period) {
            const ctx = document.getElementById('trendChart').getContext('2d');
            
            if (trendChart) {
                trendChart.destroy();
            }

            trendChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.map(d => d.formatted_period),
                    datasets: [{
                        label: `${period.charAt(0).toUpperCase() + period.slice(1)} Enablements`,
                        data: data.map(d => d.count),
                        backgroundColor: '#ffc107',
                        borderColor: '#e0a800',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        // Export functions
        function exportToExcel() {
            if (!currentData) {
                alert('Please generate a report first');
                return;
            }

            // Create CSV content
            const csvContent = [
                'Date,Circuits Enabled',
                ...currentData.daily_data.map(d => `${d.date},${d.count}`)
            ].join('\n');

            // Download
            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = `circuit_enablement_report_${new Date().toISOString().split('T')[0]}.csv`;
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            document.body.removeChild(a);
        }

        function exportToPDF() {
            window.print();
        }

        function printReport() {
            window.print();
        }
    </script>
</body>
</html>